
---@class Any : table

---@alias EventConditionFun fun(inst: GuiInst):boolean

---@alias ElemOrStyleMods table<string, Any>

---@class GuiElementMods
---@field elem_mods ElemOrStyleMods|nil
---@field style_mods ElemOrStyleMods|nil

---@class GuiClassDefinitionBase
---@field class_name string
---transform `child`/`params` (for example it's `name` or `core`),
---which is also the `params` table passed to `create`
---@field on_pre_create fun(params: GuiCreateParams, parent?: GuiInst) @ optional
---@field on_elem_created fun(inst: GuiInst) @ optional
---@field on_children_created fun(inst: GuiInst) @ optional
---@field on_destroy fun(inst: GuiInst) @ optional

---@class GuiClassDefinition : GuiClassDefinitionBase
---@field create fun(params?: GuiCreateParams): GuiInstDefinition
---@field event_conditions table<string, EventConditionFun>

---@class GuiInstDefinition : GuiElementMods
---@field add_param LuaGuiElement.add_param
---@field children GuiInstDefinition[]|nil

---@class GuiClass : GuiClassDefinition
---@field add fun(inst: GuiInst, child: GuiChild): GuiInst @ add a child to this instantce
---@field destroy fun(inst: GuiInst) @ destroy this instance

---@class GuiInst : GuiClass, table
---@field id integer @ readonly
---@field name string|nil
---@field elem LuaGuiElement
---@field parent GuiInst|nil
---@field core GuiInst|nil

---@class GuiChild
---@field class string @ class_name
---@field name string|nil
---@field core GuiInst|nil
---Location in it's parent that the child element should slot into.
---By default, the child will be appended onto the end.
---@field index integer|nil

---@class GuiCreateParams : GuiChild, table


---@class StdGuiStructFunctions
---@field get_children '"default"'|fun(self: StdGuiInst): StdGuiChild[] @ optional
---@field on_state_dispatch fun(self: StdGuiInst, state: State, state_name: string) @ optional

---@class StdFrameworkClass : GuiClass, StdGuiStructFunctions
---@field base_class StdFrameworkClass|nil
---@field structs string[]

---@class StdGuiClass
---@field class_name string
---@field struct StdGuiStruct
---@field framework_class GuiClass
---@field base_class StdGuiClass|nil
---@field state_names string[]|nil
---@field struct_names string[]
---@field extra_class_data table

---@class StdGuiInst : GuiInst, StdFrameworkClass, table
---**Do not modify this specific table directly. Use functions for that. -- TODO: what functions?**\
---`nil` when `state_names` is `nil` on the `StdGuiClass`
---@field states table<string, State>|nil
---**Used internally, do not modify.**\
---`nil` when `state_names` is `nil` on the `StdGuiClass`
---@field state_name_map table<State, string>|nil

---@class StdGuiChild : GuiChild
---@field reuse_states boolean|nil @ when `true` then `states` and `state_name_map` need to be set
---when `nil` all states must be defined in the root of the `StdGuiChild`
---
---when `not nil` all states must be defined in `states` and
---the table will be copied and missing states will be populated
---
---when `reuse_states` is `true` then this is required and will
---not be copied, no check for missing states and states much be hooked already
---@field states table<string, State>|nil
---@field state_name_map table<State, string>|nil @ only used when `reuse_states` is `true`

---@class StdGuiStruct : GuiElementMods, GuiClassDefinitionBase, StdGuiStructFunctions
---table<`struct_name`, table<`state_name`, `assignment_exrepssion`>>
---
---### example:
---```
---state_mapping = {
---  foo = {state = "state.foo"}
---  bar = {
---    hello = "state.bar.hello",
---    bye = "other_state.bye",
---  },
---},
---```
---### where
---```
---states = {"state", "other_state"},
---structs = {
---  foo = {
---    states = {"state"},
---    -- ...
---  },
---  bar = {
---    states = {"hello", "bye"},
---    -- ...
---  },
---  baz = {
---    states = {"state", "other_state"},
---    -- ...
---  },
---},
---```
---@field state_mapping table<string, table<string, string>>
---@field states string[]|nil @ names of states this class is going to use
---@field base_class string|nil
---@field structs StdGuiStruct[]|nil

---@class StdGuiStructAddParam : StdGuiStruct, LuaGuiElement.add_param


---@class StdAttribute
---@field __std_gui boolean @ true
---@field type EnumStdGuiAttribute
---@field setter fun(state: State, ...): Any
---if this is dynamic defines which state changes trigger the setter to be called
---@field triggers StdAttributeTrigger[]|nil

---@class StdRuntimeAttribute
---@field setter fun(state: State, ...): Any
---@field attribute_name string
---@field is_for_styles boolean

---@class StdAttributeTrigger
---@field state_name string
---@field field_name string



---@class State : table
---@field __internal StateInternal

---@class StateInternal
---@field data table<Any, Any>
---@field changes StateChange[]
---@field change_count integer
---@field fake State
---@field lowest_changed_index integer|nil

---@class StateChange
---@field type EnumStateChange
---@field key Any
---@field old Any|nil
---@field new Any|nil

---@class Preprocessor
prep = {}
