
---@class Any : table

---@alias EventConditionFun fun(inst: GuiInst):boolean

---@class GuiInst : LuaGuiElement.add_param, GuiClass
---@field id integer
---@field name string|nil
---@field class string
---@field elem LuaGuiElement
---@field parent GuiInst
---@field core GuiInst|nil
---@field children GuiInst[]
---@field elem_mods table<string, Any>|nil
---@field style_mods table<string, Any>|nil

---@class GuiClass
---@field class_name string
---@field create fun(params?: table): GuiInst, table<Any, Any>|nil
---@field on_elem_created fun(inst: GuiInst)
---@field on_create fun(inst: GuiInst)
---@field on_destroy fun(inst: GuiInst)
---@field event_conditions table<string, EventConditionFun>
---@field add fun(inst: GuiInst, child: GuiChild): GuiInst @ add a child to this instantce
---@field destroy fun(inst: GuiInst) @ destroy this instance

---@class StdGuiClass : GuiStructure

---@class GuiStructure
---@field class_name string
---@field class string|nil @ parent class name used for children
---@field children GuiStructure[]|nil

---@class StdAttribute
---@field __std_gui boolean @ true
---@field type EnumStdGuiAttribute
---@field setter fun(state: State): Any
---@field reacts_to string @ if this is dynamic, which state field to react to -- TODO

---@class GuiChild
---@field class string @ class_name
---@field name string|nil
---@field core GuiInst|nil

---@class BasicGuiInst : GuiInst
---@field core GuiInst|nil
---@field name_for_events string|nil
---@field parent_event_names string[]


---@alias true boolean
---@alias false boolean

---@class StateFake : State

---@class State : table
---@field __internal StateInternal

---@class StateCore
---@field internal_tables table<StateInternal, true>
---@field fake_to_internal table<StateFake, StateInternal>
---@field changed_tables table<StateInternal, true>
---@field __internal StateCoreInternalHack

---@class StateCoreInternalHack
---@field data table<string, StateFake> @ contains a single key value pair. the value is the root of the entire state

---@class StateInternal
---@field core StateCore
---@field data table @ Any table keys or values are StateFakes
---@field child_tables table<Any, StateFake>
---@field changes StateChange[]
---@field change_count integer
---@field fake StateFake
---@field lowest_changed_index integer|nil @ --TODO

---@class StateChange
---@field type EnumStateChange
---@field key Any
---@field old Any | nil
---@field new Any | nil

-- fix semantics