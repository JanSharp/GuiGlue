
local enums = require("enums")

---@generic T
---@param reacts_to string
---@param setter fun(state: State): T
---@return table
local function dynamic(reacts_to, setter)
  ---@type string
  local state_name, field_name = reacts_to:match("^([^%.]+)%.([^%.]+)$")
  if not state_name then
    error("Expected reacts_to format `state_name.field_name`, got `"..reacts_to.."`.")
  end

  return {
    __std_gui = true,
    type = enums.std_gui_attribute.dynamic,
    state_name = state_name,
    field_name = field_name,
    setter = setter,
  }
end

---@generic T
---@param setter fun(state: State): T
---@return table
local function static(setter)
  return {
    __std_gui = true,
    type = enums.std_gui_attribute.static,
    setter = setter,
  }
end

return {
  dynamic = dynamic,
  static = static,
}

-- fix semantics